{"version":3,"sources":["components/RVant/index.tsx","bug_report.ts","components/Content/index.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["repositoryList","name","repository","open","RVant","TextArea","Input","useState","setForm","issuesType","rvantVersions","setRvantVersions","reactVersions","setReactVersions","useEffect","fetch","mode","then","response","json","data","versions","Object","keys","Option","Select","handleCreate","values","issuesTitle","description","StepsToReproduce","DesiredResult","ReproduceLink","ReactVersion","ReactVantVersion","other","Device","console","log","window","encodeURIComponent","split","replace","bug_report_str","onSearch","val","className","layout","onFinish","gutter","span","style","textAlign","Item","label","required","initialValue","Group","filter","item","index","map","Button","value","rules","message","autoComplete","allowClear","placeholder","showSearch","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","dangerouslySetInnerHTML","__html","rows","type","htmlType","Content","justify","Header","Layout","href","src","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79595eb9.chunk.js","sourcesContent":["import { Button, Col, Form, Input, Radio, Row, Select } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { bug_report_str } from \"../../bug_report\";\n\ntype issuesType = 'bug' | 'feat' | 'faq'\nconst repositoryList = [{\n  name: \"React Vant\",\n  repository: \"https://github.com/3lang3/react-vant\",\n  open: true\n}, {\n  name: \"React Vant Cli\",\n  repository: \"\",\n  open: false\n}]\ntype formType = {\n  DesiredResult: string\n  Device: string\n  ReactVantVersion: string\n  ReactVersion: string\n  ReproduceLink: string\n  StepsToReproduce: string\n  description: string\n  issuesTitle: string\n  issuesType: issuesType\n  other: string\n  repository: string\n}\nconst RVant = () => {\n  const { TextArea } = Input\n  const [form, setForm] = useState<Record<string, any>>({})\n  const [issuesType, setIssuesType] = useState<issuesType>('bug')\n  const [rvantVersions, setRvantVersions] = useState<Array<string>>([])\n  const [reactVersions, setReactVersions] = useState<Array<string>>([])\n  useEffect(() => {\n    fetch(\"https://registry.npm.taobao.org/react-vant\", { mode: 'cors' }).then(response => response.json())\n      .then(data => {\n        if (data.versions) {\n          setRvantVersions(Object.keys(data?.versions))\n        }\n      })\n    // fetch(\"https://registry.npm.taobao.org/@react-vant/cli\").then(response => response.json())\n    //   .then(data => console.log(\"@react-vant/cli\", data));\n    fetch(\"https://registry.npm.taobao.org/react\").then(response => response.json())\n      .then(data => {\n        if (data.versions) {\n          setReactVersions(Object.keys(data?.versions))\n        }\n      });\n  }, [])\n  const { Option } = Select;\n\n  const handleCreate = (values:formType) => {\n    const {\n      issuesTitle,\n      repository,\n      description,\n      StepsToReproduce,\n      DesiredResult,\n      ReproduceLink,\n      ReactVersion,\n      ReactVantVersion,\n      other,\n      Device\n    } = values\n    console.log(\"repository\", repository)\n    window.open(`${repository}/issues/new?title=🐛 [Component] ${issuesTitle}&body=${bug_report_str({ description,\n      StepsToReproduce,\n      DesiredResult,\n      ReproduceLink,\n      ReactVersion,\n      ReactVantVersion,\n      Device,\n      other })}`)\n  }\n\n  function onSearch(val: any) {\n    console.log('search:', val);\n  }\n\n  const onFinish = (values: any) => {\n    setForm(values)\n    handleCreate(values)\n    console.log('Success:', values);\n  }\n  return (\n    <>\n      <div className=\"container\">\n        {\n          !!issuesType &&\n          <>\n            <p>感谢使用 React-Vant，请完整填写下面表单完成Issues提交</p>\n            <p>足够的信息才能帮助维护者定位问题所在，帮你解决问题</p>\n          </>\n        }\n        <Form layout={\"vertical\"} onFinish={onFinish}>\n          <Row gutter={[20, 20]}>\n            <Col span={12} style={{ textAlign: 'left' }}>\n              <Form.Item label={\"请选择要提交 issue 的仓库\"} required name={'repository'}\n                         initialValue={\"https://github.com/3lang3/react-vant\"}>\n                <Radio.Group>\n                  {\n                    repositoryList.filter((item, index) => item.open).map((item, index) => (\n                      <Radio.Button value={item.repository} key={index}>{item.name}</Radio.Button>\n                    ))\n                  }\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n            <Col span={12} style={{ textAlign: 'left' }}>\n              <Form.Item label={\"issue 类型\"} required name={\"issuesType\"} initialValue={\"bug\"}>\n                <Radio.Group>\n                  <Radio.Button value=\"bug\">Bug</Radio.Button>\n                  <Radio.Button value=\"feat\">Feature</Radio.Button>\n                  <Radio.Button value=\"faq\">Question</Radio.Button>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item label={\"issue 标题\"} required name={'issuesTitle'}\n                         rules={[{ required: true, message: '请输入 issues 标题' }]}>\n                <Input autoComplete=\"false\" allowClear/>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item label={\"设备/系统/浏览器\"} required name={\"Device\"} rules={[{ required: true, message: \"请输入组件库运行环境以 '/' 分隔，iPhone6/iOS8.1/safari\" }]}>\n                <Input autoComplete=\"false\" placeholder={\"请输入组件库运行环境以 '/' 分隔，iPhone6/iOS8.1/safari\"}/>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={[16, 16]}>\n            <Col span={12}>\n              <Form.Item label={\"React-Vant 版本\"} required name={'ReactVantVersion'} rules={[{ required: true, message: '请选择 React-Vant 版本' }]}>\n                <Select\n                  showSearch\n                  placeholder=\"请选择 React-Vant 版本\"\n                  optionFilterProp=\"children\"\n                  onSearch={onSearch}\n                  filterOption={(input, option) =>\n                    option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {\n                    rvantVersions.map(item => (<Option value={item} key={item}>{item}</Option>\n                    ))\n                  }\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item label={\"React 版本\"} required name={\"ReactVersion\"}>\n                <Select\n                  showSearch\n                  placeholder=\"请选择 React 版本\"\n                  optionFilterProp=\"children\"\n                  onSearch={onSearch}\n                  filterOption={(input, option) =>\n                    option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {\n                    reactVersions.map(item => (<Option value={item} key={item}>{item}</Option>\n                    ))\n                  }\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={[16, 16]}>\n            <Col span={12}>\n              <Form.Item label={\"复现链接\"} name={\"ReproduceLink\"}>\n                <Input autoComplete=\"false\"/>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item>\n                <p dangerouslySetInnerHTML={{\n                  __html: `如果重现不需要构建工具，请提供一个尽可能精简的\n        <a href=\"https://jsbin.com/?html,output\" target=\"_blank\">JsBin</a> 或者是\n        <a href=\"https://codepen.io/\" target=\"_blank\">CodePen</a> 链接。\n        如果需要构建工具，可以使用\n        <a href=\"https://codesandbox.io/s/m5v3f\" target=\"_blank\">CodeSandbox</a>\n        或是提供一个 GitHub 仓库的链接。`\n                }}/>\n                <p dangerouslySetInnerHTML={{ __html: `请不要乱填一个链接，这会导致你的 issue 被直接关闭。` }}/>\n                <span dangerouslySetInnerHTML={{\n                  __html: `截图可以使用免费图床\n                    <a href=\"https://sm.ms/\" target=\"_blank\">sm.ms</a>\n                `\n                }}/>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={[16, 16]}>\n\n          </Row>\n          <Row gutter={[16, 16]}>\n            <Col span={12}>\n              <Form.Item label={\"🐛 漏洞描述 (Bug description)\"} required name={\"description\"}>\n                <TextArea rows={5}\n                          placeholder={\"详细地描述 bug，让大家都能理解.\\nDescribe the bug in detail for everyone to understand.\"}/>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item label={\"🐾 复现步骤 (Steps to reproduce)\"} required name={'StepsToReproduce'}>\n                <TextArea rows={5}\n                          placeholder={\"清晰描述复现步骤（最好是 gif 或者视频），让大家轻松复现问题.\\n\\nClearly describe the reproduction steps (gif or video is best), so that everyone can easily reproduce the problem.\"}/>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={[16, 16]}>\n            <Col span={12}>\n              <Form.Item label={\"🌈 想要的结果 (Desired result)\"} name={\"DesiredResult\"}>\n                <TextArea rows={5}\n                          placeholder={\"描述你原本期望看到的结果.\\n\" +\n                          \"\\n\" +\n                          \"Describe what you expected to see.\"}/>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item label={\"🔖 其他 (Other)\"} name={'other'}>\n                <TextArea rows={5}\n                          placeholder={\"如其他信息可以贴在这里.\\n\" +\n                          \"\\n\" +\n                          \"If other information can be posted here.\"}/>\n              </Form.Item>\n            </Col>\n          </Row>\n          {/*TODO 富文本*/}\n          {/*<Form.Item style={{ textAlign: \"center\" }}>*/}\n          {/*  <Editor editorState={editorState} onChange={setEditorState} />*/}\n          {/*</Form.Item>*/}\n          <Form.Item style={{ textAlign: \"center\" }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              提交 issues\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </>\n  )\n}\nexport default RVant\n","export const bug_report_str = ({\n                                 // @ts-ignore\n                                 description,\n                                 // @ts-ignore\n                                 StepsToReproduce,\n                                 // @ts-ignore\n                                 DesiredResult,\n                                 // @ts-ignore\n                                 ReproduceLink,\n                                 // @ts-ignore\n                                 ReactVersion,\n                                 // @ts-ignore\n                                 ReactVantVersion,\n                                 // @ts-ignore\n                                 other,\n                                 // @ts-ignore\n                                 Device\n                               } ) => {\n  return encodeURIComponent(`\n### 🐛 漏洞描述 (Bug description)\n\n${description}\n\n### 🐾 复现步骤 (Steps to reproduce)\n\n${StepsToReproduce}\n\n### 🌈 想要的结果 (Desired result)\n\n${DesiredResult}\n\n### 💻 复现示例 (Reproduce the code)\n\n${ReproduceLink}\n\n### 📦 环境信息 (Environmental information)\n\n- Device: ${Device.split('/')[0]}\n- OS: ${Device.split('/')[1]}\n- Browser: ${Device.split('/')[2]}\n- Version :\n  - React: ${ReactVersion}\n  - React-Vant: ${ReactVantVersion}\n\n### 🔖 其他 (Other)\n\n${other}\n\n    `).replace(/%2B/gi, '+')\n\n}\n","import { Col, Form, Radio, Row } from \"antd\";\nimport React from \"react\";\nimport \"./index.scss\"\nimport RVant from \"../RVant\";\n\nconst Content = () => {\n  return (\n    <>\n      <Row justify={\"center\"}>\n        <Col className={'container'}>\n          <RVant/>\n        </Col>\n      </Row>\n    </>\n  )\n}\nexport default Content\n","import { Layout } from \"antd\";\nimport \"./index.scss\"\n\nconst Header = () => {\n  const { Header } = Layout;\n  return <>\n    <Layout>\n      <Header className=\"header\">\n        <a href=\"https://github.com/3lang3/react-vant\">\n          <div className=\"logo\">\n            <img src=\"https://img01.yzcdn.cn/vant/logo.png\" alt=\"\"/>\n            <span>React Vant</span>\n          </div>\n        </a>\n      </Header>\n    </Layout>\n  </>\n}\nexport default Header\n","import React from 'react';\nimport Content from \"./components/Content\";\nimport Header from \"./components/Header/Header\";\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Content/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}